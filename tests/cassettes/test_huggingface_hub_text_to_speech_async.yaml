interactions:
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      X-Amzn-Trace-Id:
      - ea4124f7-e8c5-4971-b819-f2748d11b7ee
      authorization:
      - DUMMY
      user-agent:
      - unknown/None; hf_hub/0.26.5; python/3.12.8
    method: GET
    uri: https://huggingface.co/api/tasks
  response:
    body:
      string: "{\"any-to-any\":{\"datasets\":[],\"demo\":{\"inputs\":[],\"outputs\":[]},\"isPlaceholder\":true,\"metrics\":[],\"models\":[],\"spaces\":[],\"summary\":\"\",\"widgetModels\":[],\"id\":\"any-to-any\",\"label\":\"Any-to-Any\",\"libraries\":[\"transformers\"]},\"audio-classification\":{\"datasets\":[{\"description\":\"A
        benchmark of 10 different audio tasks.\",\"id\":\"s3prl/superb\"},{\"description\":\"A
        dataset of YouTube clips and their sound categories.\",\"id\":\"agkphysics/AudioSet\"}],\"demo\":{\"inputs\":[{\"filename\":\"audio.wav\",\"type\":\"audio\"}],\"outputs\":[{\"data\":[{\"label\":\"Up\",\"score\":0.2},{\"label\":\"Down\",\"score\":0.8}],\"type\":\"chart\"}]},\"metrics\":[{\"description\":\"\",\"id\":\"accuracy\"},{\"description\":\"\",\"id\":\"recall\"},{\"description\":\"\",\"id\":\"precision\"},{\"description\":\"\",\"id\":\"f1\"}],\"models\":[{\"description\":\"An
        easy-to-use model for command recognition.\",\"id\":\"speechbrain/google_speech_command_xvector\"},{\"description\":\"An
        emotion recognition model.\",\"id\":\"ehcalabres/wav2vec2-lg-xlsr-en-speech-emotion-recognition\"},{\"description\":\"A
        language identification model.\",\"id\":\"facebook/mms-lid-126\"}],\"spaces\":[{\"description\":\"An
        application that can classify music into different genre.\",\"id\":\"kurianbenoy/audioclassification\"}],\"summary\":\"Audio
        classification is the task of assigning a label or class to a given audio.
        It can be used for recognizing which command a user is giving or the emotion
        of a statement, as well as identifying a speaker.\",\"widgetModels\":[\"MIT/ast-finetuned-audioset-10-10-0.4593\"],\"youtubeId\":\"KWwzcmG98Ds\",\"id\":\"audio-classification\",\"label\":\"Audio
        Classification\",\"libraries\":[\"speechbrain\",\"transformers\",\"transformers.js\"]},\"audio-to-audio\":{\"datasets\":[{\"description\":\"512-element
        X-vector embeddings of speakers from CMU ARCTIC dataset.\",\"id\":\"Matthijs/cmu-arctic-xvectors\"}],\"demo\":{\"inputs\":[{\"filename\":\"input.wav\",\"type\":\"audio\"}],\"outputs\":[{\"filename\":\"label-0.wav\",\"type\":\"audio\"},{\"filename\":\"label-1.wav\",\"type\":\"audio\"}]},\"metrics\":[{\"description\":\"The
        Signal-to-Noise ratio is the relationship between the target signal level
        and the background noise level. It is calculated as the logarithm of the target
        signal divided by the background noise, in decibels.\",\"id\":\"snri\"},{\"description\":\"The
        Signal-to-Distortion ratio is the relationship between the target signal and
        the sum of noise, interference, and artifact errors\",\"id\":\"sdri\"}],\"models\":[{\"description\":\"A
        solid model of audio source separation.\",\"id\":\"speechbrain/sepformer-wham\"},{\"description\":\"A
        speech enhancement model.\",\"id\":\"ResembleAI/resemble-enhance\"},{\"description\":\"A
        model that can change the voice in a speech recording.\",\"id\":\"microsoft/speecht5_vc\"}],\"spaces\":[{\"description\":\"An
        application for speech separation.\",\"id\":\"younver/speechbrain-speech-separation\"},{\"description\":\"An
        application for audio style transfer.\",\"id\":\"nakas/audio-diffusion_style_transfer\"}],\"summary\":\"Audio-to-Audio
        is a family of tasks in which the input is an audio and the output is one
        or multiple generated audios. Some example tasks are speech enhancement and
        source separation.\",\"widgetModels\":[\"speechbrain/sepformer-wham\"],\"youtubeId\":\"iohj7nCCYoM\",\"id\":\"audio-to-audio\",\"label\":\"Audio-to-Audio\",\"libraries\":[\"asteroid\",\"fairseq\",\"speechbrain\"]},\"audio-text-to-text\":{\"datasets\":[],\"demo\":{\"inputs\":[],\"outputs\":[]},\"isPlaceholder\":true,\"metrics\":[],\"models\":[],\"spaces\":[],\"summary\":\"\",\"widgetModels\":[],\"id\":\"audio-text-to-text\",\"label\":\"Audio-Text-to-Text\",\"libraries\":[]},\"automatic-speech-recognition\":{\"datasets\":[{\"description\":\"31,175
        hours of multilingual audio-text dataset in 108 languages.\",\"id\":\"mozilla-foundation/common_voice_17_0\"},{\"description\":\"Multilingual
        and diverse audio dataset with 101k hours of audio.\",\"id\":\"amphion/Emilia-Dataset\"},{\"description\":\"A
        dataset with 44.6k hours of English speaker data and 6k hours of other language
        speakers.\",\"id\":\"parler-tts/mls_eng\"},{\"description\":\"A multilingual
        audio dataset with 370K hours of audio.\",\"id\":\"espnet/yodas\"}],\"demo\":{\"inputs\":[{\"filename\":\"input.flac\",\"type\":\"audio\"}],\"outputs\":[{\"label\":\"Transcript\",\"content\":\"Going
        along slushy country roads and speaking to damp audiences in...\",\"type\":\"text\"}]},\"metrics\":[{\"description\":\"\",\"id\":\"wer\"},{\"description\":\"\",\"id\":\"cer\"}],\"models\":[{\"description\":\"A
        powerful ASR model by OpenAI.\",\"id\":\"openai/whisper-large-v3\"},{\"description\":\"A
        good generic speech model by MetaAI for fine-tuning.\",\"id\":\"facebook/w2v-bert-2.0\"},{\"description\":\"An
        end-to-end model that performs ASR and Speech Translation by MetaAI.\",\"id\":\"facebook/seamless-m4t-v2-large\"},{\"description\":\"A
        powerful multilingual ASR and Speech Translation model by Nvidia.\",\"id\":\"nvidia/canary-1b\"},{\"description\":\"Powerful
        speaker diarization model.\",\"id\":\"pyannote/speaker-diarization-3.1\"}],\"spaces\":[{\"description\":\"A
        powerful general-purpose speech recognition application.\",\"id\":\"hf-audio/whisper-large-v3\"},{\"description\":\"Latest
        ASR model from Useful Sensors.\",\"id\":\"mrfakename/Moonshinex\"},{\"description\":\"A
        high quality speech and text translation model by Meta.\",\"id\":\"facebook/seamless_m4t\"},{\"description\":\"A
        powerful multilingual ASR and Speech Translation model by Nvidia\",\"id\":\"nvidia/canary-1b\"}],\"summary\":\"Automatic
        Speech Recognition (ASR), also known as Speech to Text (STT), is the task
        of transcribing a given audio to text. It has many applications, such as voice
        user interfaces.\",\"widgetModels\":[\"openai/whisper-large-v3\"],\"youtubeId\":\"TksaY_FDgnk\",\"id\":\"automatic-speech-recognition\",\"label\":\"Automatic
        Speech Recognition\",\"libraries\":[\"espnet\",\"nemo\",\"speechbrain\",\"transformers\",\"transformers.js\"]},\"depth-estimation\":{\"datasets\":[{\"description\":\"NYU
        Depth V2 Dataset: Video dataset containing both RGB and depth sensor data.\",\"id\":\"sayakpaul/nyu_depth_v2\"},{\"description\":\"Monocular
        depth estimation benchmark based without noise and errors.\",\"id\":\"depth-anything/DA-2K\"}],\"demo\":{\"inputs\":[{\"filename\":\"depth-estimation-input.jpg\",\"type\":\"img\"}],\"outputs\":[{\"filename\":\"depth-estimation-output.png\",\"type\":\"img\"}]},\"metrics\":[],\"models\":[{\"description\":\"Cutting-edge
        depth estimation model.\",\"id\":\"depth-anything/Depth-Anything-V2-Large\"},{\"description\":\"A
        strong monocular depth estimation model.\",\"id\":\"jingheya/lotus-depth-g-v1-0\"},{\"description\":\"A
        depth estimation model that predicts depth in videos.\",\"id\":\"tencent/DepthCrafter\"},{\"description\":\"A
        robust depth estimation model.\",\"id\":\"apple/DepthPro\"}],\"spaces\":[{\"description\":\"An
        application that predicts the depth of an image and then reconstruct the 3D
        model as voxels.\",\"id\":\"radames/dpt-depth-estimation-3d-voxels\"},{\"description\":\"An
        application for bleeding-edge depth estimation.\",\"id\":\"akhaliq/depth-pro\"},{\"description\":\"An
        application on cutting-edge depth estimation in videos.\",\"id\":\"tencent/DepthCrafter\"},{\"description\":\"A
        human-centric depth estimation application.\",\"id\":\"facebook/sapiens-depth\"}],\"summary\":\"Depth
        estimation is the task of predicting depth of the objects present in an image.\",\"widgetModels\":[\"\"],\"youtubeId\":\"\",\"id\":\"depth-estimation\",\"label\":\"Depth
        Estimation\",\"libraries\":[\"transformers\",\"transformers.js\"]},\"document-question-answering\":{\"datasets\":[{\"description\":\"Largest
        document understanding dataset.\",\"id\":\"HuggingFaceM4/Docmatix\"},{\"description\":\"Dataset
        from the 2020 DocVQA challenge. The documents are taken from the UCSF Industry
        Documents Library.\",\"id\":\"eliolio/docvqa\"}],\"demo\":{\"inputs\":[{\"label\":\"Question\",\"content\":\"What
        is the idea behind the consumer relations efficiency team?\",\"type\":\"text\"},{\"filename\":\"document-question-answering-input.png\",\"type\":\"img\"}],\"outputs\":[{\"label\":\"Answer\",\"content\":\"Balance
        cost efficiency with quality customer service\",\"type\":\"text\"}]},\"metrics\":[{\"description\":\"The
        evaluation metric for the DocVQA challenge is the Average Normalized Levenshtein
        Similarity (ANLS). This metric is flexible to character regognition errors
        and compares the predicted answer with the ground truth answer.\",\"id\":\"anls\"},{\"description\":\"Exact
        Match is a metric based on the strict character match of the predicted answer
        and the right answer. For answers predicted correctly, the Exact Match will
        be 1. Even if only one character is different, Exact Match will be 0\",\"id\":\"exact-match\"}],\"models\":[{\"description\":\"A
        robust document question answering model.\",\"id\":\"impira/layoutlm-document-qa\"},{\"description\":\"A
        document question answering model specialized in invoices.\",\"id\":\"impira/layoutlm-invoices\"},{\"description\":\"A
        special model for OCR-free document question answering.\",\"id\":\"microsoft/udop-large\"},{\"description\":\"A
        powerful model for document question answering.\",\"id\":\"google/pix2struct-docvqa-large\"}],\"spaces\":[{\"description\":\"A
        robust document question answering application.\",\"id\":\"impira/docquery\"},{\"description\":\"An
        application that can answer questions from invoices.\",\"id\":\"impira/invoices\"},{\"description\":\"An
        application to compare different document question answering models.\",\"id\":\"merve/compare_docvqa_models\"}],\"summary\":\"Document
        Question Answering (also known as Document Visual Question Answering) is the
        task of answering questions on document images. Document question answering
        models take a (document, question) pair as input and return an answer in natural
        language. Models usually rely on multi-modal features, combining text, position
        of words (bounding-boxes) and image.\",\"widgetModels\":[\"impira/layoutlm-invoices\"],\"youtubeId\":\"\",\"id\":\"document-question-answering\",\"label\":\"Document
        Question Answering\",\"libraries\":[\"transformers\",\"transformers.js\"]},\"feature-extraction\":{\"datasets\":[{\"description\":\"Wikipedia
        dataset containing cleaned articles of all languages. Can be used to train
        `feature-extraction` models.\",\"id\":\"wikipedia\"}],\"demo\":{\"inputs\":[{\"label\":\"Input\",\"content\":\"India,
        officially the Republic of India, is a country in South Asia.\",\"type\":\"text\"}],\"outputs\":[{\"table\":[[\"Dimension
        1\",\"Dimension 2\",\"Dimension 3\"],[\"2.583383083343506\",\"2.757075071334839\",\"0.9023529887199402\"],[\"8.29393482208252\",\"1.1071064472198486\",\"2.03399395942688\"],[\"-0.7754912972450256\",\"-1.647324562072754\",\"-0.6113331913948059\"],[\"0.07087723910808563\",\"1.5942802429199219\",\"1.4610432386398315\"]],\"type\":\"tabular\"}]},\"metrics\":[],\"models\":[{\"description\":\"A
        powerful feature extraction model for natural language processing tasks.\",\"id\":\"thenlper/gte-large\"},{\"description\":\"A
        strong feature extraction model for retrieval.\",\"id\":\"Alibaba-NLP/gte-Qwen1.5-7B-instruct\"}],\"spaces\":[{\"description\":\"A
        leaderboard to rank text feature extraction models based on a benchmark.\",\"id\":\"mteb/leaderboard\"},{\"description\":\"A
        leaderboard to rank best feature extraction models based on human feedback.\",\"id\":\"mteb/arena\"}],\"summary\":\"Feature
        extraction is the task of extracting features learnt in a model.\",\"widgetModels\":[\"facebook/bart-base\"],\"id\":\"feature-extraction\",\"label\":\"Feature
        Extraction\",\"libraries\":[\"sentence-transformers\",\"transformers\",\"transformers.js\"]},\"fill-mask\":{\"datasets\":[{\"description\":\"A
        common dataset that is used to train models for many languages.\",\"id\":\"wikipedia\"},{\"description\":\"A
        large English dataset with text crawled from the web.\",\"id\":\"c4\"}],\"demo\":{\"inputs\":[{\"label\":\"Input\",\"content\":\"The
        <mask> barked at me\",\"type\":\"text\"}],\"outputs\":[{\"type\":\"chart\",\"data\":[{\"label\":\"wolf\",\"score\":0.487},{\"label\":\"dog\",\"score\":0.061},{\"label\":\"cat\",\"score\":0.058},{\"label\":\"fox\",\"score\":0.047},{\"label\":\"squirrel\",\"score\":0.025}]}]},\"metrics\":[{\"description\":\"Cross
        Entropy is a metric that calculates the difference between two probability
        distributions. Each probability distribution is the distribution of predicted
        words\",\"id\":\"cross_entropy\"},{\"description\":\"Perplexity is the exponential
        of the cross-entropy loss. It evaluates the probabilities assigned to the
        next word by the model. Lower perplexity indicates better performance\",\"id\":\"perplexity\"}],\"models\":[{\"description\":\"The
        famous BERT model.\",\"id\":\"google-bert/bert-base-uncased\"},{\"description\":\"A
        multilingual model trained on 100 languages.\",\"id\":\"FacebookAI/xlm-roberta-base\"}],\"spaces\":[],\"summary\":\"Masked
        language modeling is the task of masking some of the words in a sentence and
        predicting which words should replace those masks. These models are useful
        when we want to get a statistical understanding of the language in which the
        model is trained in.\",\"widgetModels\":[\"distilroberta-base\"],\"youtubeId\":\"mqElG5QJWUg\",\"id\":\"fill-mask\",\"label\":\"Fill-Mask\",\"libraries\":[\"transformers\",\"transformers.js\"]},\"image-classification\":{\"datasets\":[{\"description\":\"Benchmark
        dataset used for image classification with images that belong to 100 classes.\",\"id\":\"cifar100\"},{\"description\":\"Dataset
        consisting of images of garments.\",\"id\":\"fashion_mnist\"}],\"demo\":{\"inputs\":[{\"filename\":\"image-classification-input.jpeg\",\"type\":\"img\"}],\"outputs\":[{\"type\":\"chart\",\"data\":[{\"label\":\"Egyptian
        cat\",\"score\":0.514},{\"label\":\"Tabby cat\",\"score\":0.193},{\"label\":\"Tiger
        cat\",\"score\":0.068}]}]},\"metrics\":[{\"description\":\"\",\"id\":\"accuracy\"},{\"description\":\"\",\"id\":\"recall\"},{\"description\":\"\",\"id\":\"precision\"},{\"description\":\"\",\"id\":\"f1\"}],\"models\":[{\"description\":\"A
        strong image classification model.\",\"id\":\"google/vit-base-patch16-224\"},{\"description\":\"A
        robust image classification model.\",\"id\":\"facebook/deit-base-distilled-patch16-224\"},{\"description\":\"A
        strong image classification model.\",\"id\":\"facebook/convnext-large-224\"}],\"spaces\":[{\"description\":\"An
        application that classifies what a given image is about.\",\"id\":\"nielsr/perceiver-image-classification\"}],\"summary\":\"Image
        classification is the task of assigning a label or class to an entire image.
        Images are expected to have only one class for each image. Image classification
        models take an image as input and return a prediction about which class the
        image belongs to.\",\"widgetModels\":[\"google/vit-base-patch16-224\"],\"youtubeId\":\"tjAIM7BOYhw\",\"id\":\"image-classification\",\"label\":\"Image
        Classification\",\"libraries\":[\"keras\",\"timm\",\"transformers\",\"transformers.js\"]},\"image-feature-extraction\":{\"datasets\":[{\"description\":\"ImageNet-1K
        is a image classification dataset in which images are used to train image-feature-extraction
        models.\",\"id\":\"imagenet-1k\"}],\"demo\":{\"inputs\":[{\"filename\":\"mask-generation-input.png\",\"type\":\"img\"}],\"outputs\":[{\"table\":[[\"Dimension
        1\",\"Dimension 2\",\"Dimension 3\"],[\"0.21236686408519745\",\"1.0919708013534546\",\"0.8512550592422485\"],[\"0.809657871723175\",\"-0.18544459342956543\",\"-0.7851548194885254\"],[\"1.3103108406066895\",\"-0.2479034662246704\",\"-0.9107287526130676\"],[\"1.8536205291748047\",\"-0.36419737339019775\",\"0.09717650711536407\"]],\"type\":\"tabular\"}]},\"metrics\":[],\"models\":[{\"description\":\"A
        powerful image feature extraction model.\",\"id\":\"timm/vit_large_patch14_dinov2.lvd142m\"},{\"description\":\"A
        strong image feature extraction model.\",\"id\":\"nvidia/MambaVision-T-1K\"},{\"description\":\"A
        robust image feature extraction model.\",\"id\":\"facebook/dino-vitb16\"},{\"description\":\"Strong
        image feature extraction model made for information retrieval from documents.\",\"id\":\"vidore/colpali\"},{\"description\":\"Strong
        image feature extraction model that can be used on images and documents.\",\"id\":\"OpenGVLab/InternViT-6B-448px-V1-2\"}],\"spaces\":[],\"summary\":\"Image
        feature extraction is the task of extracting features learnt in a computer
        vision model.\",\"widgetModels\":[],\"id\":\"image-feature-extraction\",\"label\":\"Image
        Feature Extraction\",\"libraries\":[\"timm\",\"transformers\"]},\"image-segmentation\":{\"datasets\":[{\"description\":\"Scene
        segmentation dataset.\",\"id\":\"scene_parse_150\"}],\"demo\":{\"inputs\":[{\"filename\":\"image-segmentation-input.jpeg\",\"type\":\"img\"}],\"outputs\":[{\"filename\":\"image-segmentation-output.png\",\"type\":\"img\"}]},\"metrics\":[{\"description\":\"Average
        Precision (AP) is the Area Under the PR Curve (AUC-PR). It is calculated for
        each semantic class separately\",\"id\":\"Average Precision\"},{\"description\":\"Mean
        Average Precision (mAP) is the overall average of the AP values\",\"id\":\"Mean
        Average Precision\"},{\"description\":\"Intersection over Union (IoU) is the
        overlap of segmentation masks. Mean IoU is the average of the IoU of all semantic
        classes\",\"id\":\"Mean Intersection over Union\"},{\"description\":\"AP\u03B1
        is the Average Precision at the IoU threshold of a \u03B1 value, for example,
        AP50 and AP75\",\"id\":\"AP\u03B1\"}],\"models\":[{\"description\":\"Solid
        semantic segmentation model trained on ADE20k.\",\"id\":\"openmmlab/upernet-convnext-small\"},{\"description\":\"Background
        removal model.\",\"id\":\"briaai/RMBG-1.4\"},{\"description\":\"A multipurpose
        image segmentation model for high resolution images.\",\"id\":\"ZhengPeng7/BiRefNet\"},{\"description\":\"Powerful
        human-centric image segmentation model.\",\"id\":\"facebook/sapiens-seg-1b\"},{\"description\":\"Panoptic
        segmentation model trained on the COCO (common objects) dataset.\",\"id\":\"facebook/mask2former-swin-large-coco-panoptic\"}],\"spaces\":[{\"description\":\"A
        semantic segmentation application that can predict unseen instances out of
        the box.\",\"id\":\"facebook/ov-seg\"},{\"description\":\"One of the strongest
        segmentation applications.\",\"id\":\"jbrinkma/segment-anything\"},{\"description\":\"A
        human-centric segmentation model.\",\"id\":\"facebook/sapiens-pose\"},{\"description\":\"An
        instance segmentation application to predict neuronal cell types from microscopy
        images.\",\"id\":\"rashmi/sartorius-cell-instance-segmentation\"},{\"description\":\"An
        application that segments videos.\",\"id\":\"ArtGAN/Segment-Anything-Video\"},{\"description\":\"An
        panoptic segmentation application built for outdoor environments.\",\"id\":\"segments/panoptic-segment-anything\"}],\"summary\":\"Image
        Segmentation divides an image into segments where each pixel in the image
        is mapped to an object. This task has multiple variants such as instance segmentation,
        panoptic segmentation and semantic segmentation.\",\"widgetModels\":[\"nvidia/segformer-b0-finetuned-ade-512-512\"],\"youtubeId\":\"dKE8SIt9C-w\",\"id\":\"image-segmentation\",\"label\":\"Image
        Segmentation\",\"libraries\":[\"transformers\",\"transformers.js\"]},\"image-to-image\":{\"datasets\":[{\"description\":\"Synthetic
        dataset, for image relighting\",\"id\":\"VIDIT\"},{\"description\":\"Multiple
        images of celebrities, used for facial expression translation\",\"id\":\"huggan/CelebA-faces\"}],\"demo\":{\"inputs\":[{\"filename\":\"image-to-image-input.jpeg\",\"type\":\"img\"}],\"outputs\":[{\"filename\":\"image-to-image-output.png\",\"type\":\"img\"}]},\"isPlaceholder\":false,\"metrics\":[{\"description\":\"Peak
        Signal to Noise Ratio (PSNR) is an approximation of the human perception,
        considering the ratio of the absolute intensity with respect to the variations.
        Measured in dB, a high value indicates a high fidelity.\",\"id\":\"PSNR\"},{\"description\":\"Structural
        Similarity Index (SSIM) is a perceptual metric which compares the luminance,
        contrast and structure of two images. The values of SSIM range between -1
        and 1, and higher values indicate closer resemblance to the original image.\",\"id\":\"SSIM\"},{\"description\":\"Inception
        Score (IS) is an analysis of the labels predicted by an image classification
        model when presented with a sample of the generated images.\",\"id\":\"IS\"}],\"models\":[{\"description\":\"An
        image-to-image model to improve image resolution.\",\"id\":\"fal/AuraSR-v2\"},{\"description\":\"A
        model that increases the resolution of an image.\",\"id\":\"keras-io/super-resolution\"},{\"description\":\"A
        model that creates a set of variations of the input image in the style of
        DALL-E using Stable Diffusion.\",\"id\":\"lambdalabs/sd-image-variations-diffusers\"},{\"description\":\"A
        model that generates images based on segments in the input image and the text
        prompt.\",\"id\":\"mfidabel/controlnet-segment-anything\"},{\"description\":\"A
        model that takes an image and an instruction to edit the image.\",\"id\":\"timbrooks/instruct-pix2pix\"}],\"spaces\":[{\"description\":\"Image
        enhancer application for low light.\",\"id\":\"keras-io/low-light-image-enhancement\"},{\"description\":\"Style
        transfer application.\",\"id\":\"keras-io/neural-style-transfer\"},{\"description\":\"An
        application that generates images based on segment control.\",\"id\":\"mfidabel/controlnet-segment-anything\"},{\"description\":\"Image
        generation application that takes image control and text prompt.\",\"id\":\"hysts/ControlNet\"},{\"description\":\"Colorize
        any image using this app.\",\"id\":\"ioclab/brightness-controlnet\"},{\"description\":\"Edit
        images with instructions.\",\"id\":\"timbrooks/instruct-pix2pix\"}],\"summary\":\"Image-to-image
        is the task of transforming an input image through a variety of possible manipulations
        and enhancements, such as super-resolution, image inpainting, colorization,
        and more.\",\"widgetModels\":[\"stabilityai/stable-diffusion-2-inpainting\"],\"youtubeId\":\"\",\"id\":\"image-to-image\",\"label\":\"Image-to-Image\",\"libraries\":[\"diffusers\",\"transformers\",\"transformers.js\"]},\"image-text-to-text\":{\"datasets\":[{\"description\":\"Instructions
        composed of image and text.\",\"id\":\"liuhaotian/LLaVA-Instruct-150K\"},{\"description\":\"Conversation
        turns where questions involve image and text.\",\"id\":\"liuhaotian/LLaVA-Pretrain\"},{\"description\":\"A
        collection of datasets made for model fine-tuning.\",\"id\":\"HuggingFaceM4/the_cauldron\"},{\"description\":\"Screenshots
        of websites with their HTML/CSS codes.\",\"id\":\"HuggingFaceM4/WebSight\"}],\"demo\":{\"inputs\":[{\"filename\":\"image-text-to-text-input.png\",\"type\":\"img\"},{\"label\":\"Text
        Prompt\",\"content\":\"Describe the position of the bee in detail.\",\"type\":\"text\"}],\"outputs\":[{\"label\":\"Answer\",\"content\":\"The
        bee is sitting on a pink flower, surrounded by other flowers. The bee is positioned
        in the center of the flower, with its head and front legs sticking out.\",\"type\":\"text\"}]},\"metrics\":[],\"models\":[{\"description\":\"Powerful
        vision language model with great visual understanding and reasoning capabilities.\",\"id\":\"meta-llama/Llama-3.2-11B-Vision-Instruct\"},{\"description\":\"Cutting-edge
        vision language models.\",\"id\":\"allenai/Molmo-7B-D-0924\"},{\"description\":\"Small
        yet powerful model.\",\"id\":\"vikhyatk/moondream2\"},{\"description\":\"Strong
        image-text-to-text model.\",\"id\":\"Qwen/Qwen2-VL-7B-Instruct\"},{\"description\":\"Strong
        image-text-to-text model.\",\"id\":\"mistralai/Pixtral-12B-2409\"},{\"description\":\"Strong
        image-text-to-text model focused on documents.\",\"id\":\"stepfun-ai/GOT-OCR2_0\"}],\"spaces\":[{\"description\":\"Leaderboard
        to evaluate vision language models.\",\"id\":\"opencompass/open_vlm_leaderboard\"},{\"description\":\"Vision
        language models arena, where models are ranked by votes of users.\",\"id\":\"WildVision/vision-arena\"},{\"description\":\"Powerful
        vision-language model assistant.\",\"id\":\"akhaliq/Molmo-7B-D-0924\"},{\"description\":\"An
        image-text-to-text application focused on documents.\",\"id\":\"stepfun-ai/GOT_official_online_demo\"},{\"description\":\"An
        application to compare outputs of different vision language models.\",\"id\":\"merve/compare_VLMs\"},{\"description\":\"An
        application for chatting with an image-text-to-text model.\",\"id\":\"GanymedeNil/Qwen2-VL-7B\"}],\"summary\":\"Image-text-to-text
        models take in an image and text prompt and output text. These models are
        also called vision-language models, or VLMs. The difference from image-to-text
        models is that these models take an additional text input, not restricting
        the model to certain use cases like image captioning, and may also be trained
        to accept a conversation as input.\",\"widgetModels\":[\"meta-llama/Llama-3.2-11B-Vision-Instruct\"],\"youtubeId\":\"IoGaGfU1CIg\",\"id\":\"image-text-to-text\",\"label\":\"Image-Text-to-Text\",\"libraries\":[\"transformers\"]},\"image-to-text\":{\"datasets\":[{\"description\":\"Dataset
        from 12M image-text of Reddit\",\"id\":\"red_caps\"},{\"description\":\"Dataset
        from 3.3M images of Google\",\"id\":\"datasets/conceptual_captions\"}],\"demo\":{\"inputs\":[{\"filename\":\"savanna.jpg\",\"type\":\"img\"}],\"outputs\":[{\"label\":\"Detailed
        description\",\"content\":\"a herd of giraffes and zebras grazing in a field\",\"type\":\"text\"}]},\"metrics\":[],\"models\":[{\"description\":\"A
        robust image captioning model.\",\"id\":\"Salesforce/blip2-opt-2.7b\"},{\"description\":\"A
        powerful and accurate image-to-text model that can also localize concepts
        in images.\",\"id\":\"microsoft/kosmos-2-patch14-224\"},{\"description\":\"A
        strong optical character recognition model.\",\"id\":\"facebook/nougat-base\"},{\"description\":\"A
        powerful model that lets you have a conversation with the image.\",\"id\":\"llava-hf/llava-1.5-7b-hf\"}],\"spaces\":[{\"description\":\"An
        application that compares various image captioning models.\",\"id\":\"nielsr/comparing-captioning-models\"},{\"description\":\"A
        robust image captioning application.\",\"id\":\"flax-community/image-captioning\"},{\"description\":\"An
        application that transcribes handwritings into text.\",\"id\":\"nielsr/TrOCR-handwritten\"},{\"description\":\"An
        application that can caption images and answer questions about a given image.\",\"id\":\"Salesforce/BLIP\"},{\"description\":\"An
        application that can caption images and answer questions with a conversational
        agent.\",\"id\":\"Salesforce/BLIP2\"},{\"description\":\"An image captioning
        application that demonstrates the effect of noise on captions.\",\"id\":\"johko/capdec-image-captioning\"}],\"summary\":\"Image
        to text models output a text from a given image. Image captioning or optical
        character recognition can be considered as the most common applications of
        image to text.\",\"widgetModels\":[\"Salesforce/blip-image-captioning-large\"],\"youtubeId\":\"\",\"id\":\"image-to-text\",\"label\":\"Image-to-Text\",\"libraries\":[\"transformers\",\"transformers.js\"]},\"keypoint-detection\":{\"datasets\":[{\"description\":\"A
        dataset of hand keypoints of over 500k examples.\",\"id\":\"Vincent-luo/hagrid-mediapipe-hands\"}],\"demo\":{\"inputs\":[{\"filename\":\"keypoint-detection-input.png\",\"type\":\"img\"}],\"outputs\":[{\"filename\":\"keypoint-detection-output.png\",\"type\":\"img\"}]},\"metrics\":[],\"models\":[{\"description\":\"A
        robust keypoint detection model.\",\"id\":\"magic-leap-community/superpoint\"},{\"description\":\"Strong
        keypoint detection model used to detect human pose.\",\"id\":\"facebook/sapiens-pose-1b\"}],\"spaces\":[{\"description\":\"An
        application that detects hand keypoints in real-time.\",\"id\":\"datasciencedojo/Hand-Keypoint-Detection-Realtime\"},{\"description\":\"An
        application to try a universal keypoint detection model.\",\"id\":\"merve/SuperPoint\"}],\"summary\":\"Keypoint
        detection is the task of identifying meaningful distinctive points or features
        in an image.\",\"widgetModels\":[],\"youtubeId\":\"\",\"id\":\"keypoint-detection\",\"label\":\"Keypoint
        Detection\",\"libraries\":[\"transformers\"]},\"mask-generation\":{\"datasets\":[{\"description\":\"Widely
        used benchmark dataset for multiple Vision tasks.\",\"id\":\"merve/coco2017\"},{\"description\":\"Medical
        Imaging dataset of the Human Brain for segmentation and mask generating tasks\",\"id\":\"rocky93/BraTS_segmentation\"}],\"demo\":{\"inputs\":[{\"filename\":\"mask-generation-input.png\",\"type\":\"img\"}],\"outputs\":[{\"filename\":\"mask-generation-output.png\",\"type\":\"img\"}]},\"metrics\":[{\"description\":\"IoU
        is used to measure the overlap between predicted mask and the ground truth
        mask.\",\"id\":\"Intersection over Union (IoU)\"}],\"models\":[{\"description\":\"Small
        yet powerful mask generation model.\",\"id\":\"Zigeng/SlimSAM-uniform-50\"},{\"description\":\"Very
        strong mask generation model.\",\"id\":\"facebook/sam2-hiera-large\"}],\"spaces\":[{\"description\":\"An
        application that combines a mask generation model with a zero-shot object
        detection model for text-guided image segmentation.\",\"id\":\"merve/OWLSAM2\"},{\"description\":\"An
        application that compares the performance of a large and a small mask generation
        model.\",\"id\":\"merve/slimsam\"},{\"description\":\"An application based
        on an improved mask generation model.\",\"id\":\"SkalskiP/segment-anything-model-2\"},{\"description\":\"An
        application to remove objects from videos using mask generation models.\",\"id\":\"SkalskiP/SAM_and_ProPainter\"}],\"summary\":\"Mask
        generation is the task of generating masks that identify a specific object
        or region of interest in a given image. Masks are often used in segmentation
        tasks, where they provide a precise way to isolate the object of interest
        for further processing or analysis.\",\"widgetModels\":[],\"youtubeId\":\"\",\"id\":\"mask-generation\",\"label\":\"Mask
        Generation\",\"libraries\":[\"transformers\"]},\"object-detection\":{\"datasets\":[{\"description\":\"Widely
        used benchmark dataset for multiple vision tasks.\",\"id\":\"merve/coco2017\"},{\"description\":\"Multi-task
        computer vision benchmark.\",\"id\":\"merve/pascal-voc\"}],\"demo\":{\"inputs\":[{\"filename\":\"object-detection-input.jpg\",\"type\":\"img\"}],\"outputs\":[{\"filename\":\"object-detection-output.jpg\",\"type\":\"img\"}]},\"metrics\":[{\"description\":\"The
        Average Precision (AP) metric is the Area Under the PR Curve (AUC-PR). It
        is calculated for each class separately\",\"id\":\"Average Precision\"},{\"description\":\"The
        Mean Average Precision (mAP) metric is the overall average of the AP values\",\"id\":\"Mean
        Average Precision\"},{\"description\":\"The AP\u03B1 metric is the Average
        Precision at the IoU threshold of a \u03B1 value, for example, AP50 and AP75\",\"id\":\"AP\u03B1\"}],\"models\":[{\"description\":\"Solid
        object detection model pre-trained on the COCO 2017 dataset.\",\"id\":\"facebook/detr-resnet-50\"},{\"description\":\"Real-time
        and accurate object detection model.\",\"id\":\"jameslahm/yolov10x\"},{\"description\":\"Fast
        and accurate object detection model trained on COCO and Object365 datasets.\",\"id\":\"PekingU/rtdetr_r18vd_coco_o365\"}],\"spaces\":[{\"description\":\"Leaderboard
        to compare various object detection models across several metrics.\",\"id\":\"hf-vision/object_detection_leaderboard\"},{\"description\":\"An
        application that contains various object detection models to try from.\",\"id\":\"Gradio-Blocks/Object-Detection-With-DETR-and-YOLOS\"},{\"description\":\"An
        application that shows multiple cutting edge techniques for object detection
        and tracking.\",\"id\":\"kadirnar/torchyolo\"},{\"description\":\"An object
        tracking, segmentation and inpainting application.\",\"id\":\"VIPLab/Track-Anything\"},{\"description\":\"Very
        fast object tracking application based on object detection.\",\"id\":\"merve/RT-DETR-tracking-coco\"}],\"summary\":\"Object
        Detection models allow users to identify objects of certain defined classes.
        Object detection models receive an image as input and output the images with
        bounding boxes and labels on detected objects.\",\"widgetModels\":[\"facebook/detr-resnet-50\"],\"youtubeId\":\"WdAeKSOpxhw\",\"id\":\"object-detection\",\"label\":\"Object
        Detection\",\"libraries\":[\"transformers\",\"transformers.js\"]},\"video-classification\":{\"datasets\":[{\"description\":\"Benchmark
        dataset used for video classification with videos that belong to 400 classes.\",\"id\":\"kinetics400\"}],\"demo\":{\"inputs\":[{\"filename\":\"video-classification-input.gif\",\"type\":\"img\"}],\"outputs\":[{\"type\":\"chart\",\"data\":[{\"label\":\"Playing
        Guitar\",\"score\":0.514},{\"label\":\"Playing Tennis\",\"score\":0.193},{\"label\":\"Cooking\",\"score\":0.068}]}]},\"metrics\":[{\"description\":\"\",\"id\":\"accuracy\"},{\"description\":\"\",\"id\":\"recall\"},{\"description\":\"\",\"id\":\"precision\"},{\"description\":\"\",\"id\":\"f1\"}],\"models\":[{\"description\":\"Strong
        Video Classification model trained on the Kinetics 400 dataset.\",\"id\":\"google/vivit-b-16x2-kinetics400\"},{\"description\":\"Strong
        Video Classification model trained on the Kinetics 400 dataset.\",\"id\":\"microsoft/xclip-base-patch32\"}],\"spaces\":[{\"description\":\"An
        application that classifies video at different timestamps.\",\"id\":\"nateraw/lavila\"},{\"description\":\"An
        application that classifies video.\",\"id\":\"fcakyon/video-classification\"}],\"summary\":\"Video
        classification is the task of assigning a label or class to an entire video.
        Videos are expected to have only one class for each video. Video classification
        models take a video as input and return a prediction about which class the
        video belongs to.\",\"widgetModels\":[],\"youtubeId\":\"\",\"id\":\"video-classification\",\"label\":\"Video
        Classification\",\"libraries\":[\"transformers\"]},\"question-answering\":{\"datasets\":[{\"description\":\"A
        famous question answering dataset based on English articles from Wikipedia.\",\"id\":\"squad_v2\"},{\"description\":\"A
        dataset of aggregated anonymized actual queries issued to the Google search
        engine.\",\"id\":\"natural_questions\"}],\"demo\":{\"inputs\":[{\"label\":\"Question\",\"content\":\"Which
        name is also used to describe the Amazon rainforest in English?\",\"type\":\"text\"},{\"label\":\"Context\",\"content\":\"The
        Amazon rainforest, also known in English as Amazonia or the Amazon Jungle\",\"type\":\"text\"}],\"outputs\":[{\"label\":\"Answer\",\"content\":\"Amazonia\",\"type\":\"text\"}]},\"metrics\":[{\"description\":\"Exact
        Match is a metric based on the strict character match of the predicted answer
        and the right answer. For answers predicted correctly, the Exact Match will
        be 1. Even if only one character is different, Exact Match will be 0\",\"id\":\"exact-match\"},{\"description\":\"
        The F1-Score metric is useful if we value both false positives and false negatives
        equally. The F1-Score is calculated on each word in the predicted sequence
        against the correct answer\",\"id\":\"f1\"}],\"models\":[{\"description\":\"A
        robust baseline model for most question answering domains.\",\"id\":\"deepset/roberta-base-squad2\"},{\"description\":\"Small
        yet robust model that can answer questions.\",\"id\":\"distilbert/distilbert-base-cased-distilled-squad\"},{\"description\":\"A
        special model that can answer questions from tables.\",\"id\":\"google/tapas-base-finetuned-wtq\"}],\"spaces\":[{\"description\":\"An
        application that can answer a long question from Wikipedia.\",\"id\":\"deepset/wikipedia-assistant\"}],\"summary\":\"Question
        Answering models can retrieve the answer to a question from a given text,
        which is useful for searching for an answer in a document. Some question answering
        models can generate answers without context!\",\"widgetModels\":[\"deepset/roberta-base-squad2\"],\"youtubeId\":\"ajPx5LwJD-I\",\"id\":\"question-answering\",\"label\":\"Question
        Answering\",\"libraries\":[\"adapter-transformers\",\"allennlp\",\"transformers\",\"transformers.js\"]},\"reinforcement-learning\":{\"datasets\":[{\"description\":\"A
        curation of widely used datasets for Data Driven Deep Reinforcement Learning
        (D4RL)\",\"id\":\"edbeeching/decision_transformer_gym_replay\"}],\"demo\":{\"inputs\":[{\"label\":\"State\",\"content\":\"Red
        traffic light, pedestrians are about to pass.\",\"type\":\"text\"}],\"outputs\":[{\"label\":\"Action\",\"content\":\"Stop
        the car.\",\"type\":\"text\"},{\"label\":\"Next State\",\"content\":\"Yellow
        light, pedestrians have crossed.\",\"type\":\"text\"}]},\"metrics\":[{\"description\":\"Accumulated
        reward across all time steps discounted by a factor that ranges between 0
        and 1 and determines how much the agent optimizes for future relative to immediate
        rewards. Measures how good is the policy ultimately found by a given algorithm
        considering uncertainty over the future.\",\"id\":\"Discounted Total Reward\"},{\"description\":\"Average
        return obtained after running the policy for a certain number of evaluation
        episodes. As opposed to total reward, mean reward considers how much reward
        a given algorithm receives while learning.\",\"id\":\"Mean Reward\"},{\"description\":\"Measures
        how good a given algorithm is after a predefined time. Some algorithms may
        be guaranteed to converge to optimal behavior across many time steps. However,
        an agent that reaches an acceptable level of optimality after a given time
        horizon may be preferable to one that ultimately reaches optimality but takes
        a long time.\",\"id\":\"Level of Performance After Some Time\"}],\"models\":[{\"description\":\"A
        Reinforcement Learning model trained on expert data from the Gym Hopper environment\",\"id\":\"edbeeching/decision-transformer-gym-hopper-expert\"},{\"description\":\"A
        PPO agent playing seals/CartPole-v0 using the stable-baselines3 library and
        the RL Zoo.\",\"id\":\"HumanCompatibleAI/ppo-seals-CartPole-v0\"}],\"spaces\":[{\"description\":\"An
        application for a cute puppy agent learning to catch a stick.\",\"id\":\"ThomasSimonini/Huggy\"},{\"description\":\"An
        application to play Snowball Fight with a reinforcement learning agent.\",\"id\":\"ThomasSimonini/SnowballFight\"}],\"summary\":\"Reinforcement
        learning is the computational approach of learning from action by interacting
        with an environment through trial and error and receiving rewards (negative
        or positive) as feedback\",\"widgetModels\":[],\"youtubeId\":\"q0BiUn5LiBc\",\"id\":\"reinforcement-learning\",\"label\":\"Reinforcement
        Learning\",\"libraries\":[\"transformers\",\"stable-baselines3\",\"ml-agents\",\"sample-factory\"]},\"sentence-similarity\":{\"datasets\":[{\"description\":\"Bing
        queries with relevant passages from various web sources.\",\"id\":\"ms_marco\"}],\"demo\":{\"inputs\":[{\"label\":\"Source
        sentence\",\"content\":\"Machine learning is so easy.\",\"type\":\"text\"},{\"label\":\"Sentences
        to compare to\",\"content\":\"Deep learning is so straightforward.\",\"type\":\"text\"},{\"label\":\"\",\"content\":\"This
        is so difficult, like rocket science.\",\"type\":\"text\"},{\"label\":\"\",\"content\":\"I
        can't believe how much I struggled with this.\",\"type\":\"text\"}],\"outputs\":[{\"type\":\"chart\",\"data\":[{\"label\":\"Deep
        learning is so straightforward.\",\"score\":0.623},{\"label\":\"This is so
        difficult, like rocket science.\",\"score\":0.413},{\"label\":\"I can't believe
        how much I struggled with this.\",\"score\":0.256}]}]},\"metrics\":[{\"description\":\"Reciprocal
        Rank is a measure used to rank the relevancy of documents given a set of documents.
        Reciprocal Rank is the reciprocal of the rank of the document retrieved, meaning,
        if the rank is 3, the Reciprocal Rank is 0.33. If the rank is 1, the Reciprocal
        Rank is 1\",\"id\":\"Mean Reciprocal Rank\"},{\"description\":\"The similarity
        of the embeddings is evaluated mainly on cosine similarity. It is calculated
        as the cosine of the angle between two vectors. It is particularly useful
        when your texts are not the same length\",\"id\":\"Cosine Similarity\"}],\"models\":[{\"description\":\"This
        model works well for sentences and paragraphs and can be used for clustering/grouping
        and semantic searches.\",\"id\":\"sentence-transformers/all-mpnet-base-v2\"},{\"description\":\"A
        multilingual robust sentence similarity model..\",\"id\":\"BAAI/bge-m3\"}],\"spaces\":[{\"description\":\"An
        application that leverages sentence similarity to answer questions from YouTube
        videos.\",\"id\":\"Gradio-Blocks/Ask_Questions_To_YouTube_Videos\"},{\"description\":\"An
        application that retrieves relevant PubMed abstracts for a given online article
        which can be used as further references.\",\"id\":\"Gradio-Blocks/pubmed-abstract-retriever\"},{\"description\":\"An
        application that leverages sentence similarity to summarize text.\",\"id\":\"nickmuchi/article-text-summarizer\"},{\"description\":\"A
        guide that explains how Sentence Transformers can be used for semantic search.\",\"id\":\"sentence-transformers/Sentence_Transformers_for_semantic_search\"}],\"summary\":\"Sentence
        Similarity is the task of determining how similar two texts are. Sentence
        similarity models convert input texts into vectors (embeddings) that capture
        semantic information and calculate how close (similar) they are between them.
        This task is particularly useful for information retrieval and clustering/grouping.\",\"widgetModels\":[\"BAAI/bge-small-en-v1.5\"],\"youtubeId\":\"VCZq5AkbNEU\",\"id\":\"sentence-similarity\",\"label\":\"Sentence
        Similarity\",\"libraries\":[\"sentence-transformers\",\"spacy\",\"transformers.js\"]},\"summarization\":{\"canonicalId\":\"text2text-generation\",\"datasets\":[{\"description\":\"News
        articles in five different languages along with their summaries. Widely used
        for benchmarking multilingual summarization models.\",\"id\":\"mlsum\"},{\"description\":\"English
        conversations and their summaries. Useful for benchmarking conversational
        agents.\",\"id\":\"samsum\"}],\"demo\":{\"inputs\":[{\"label\":\"Input\",\"content\":\"The
        tower is 324 metres (1,063 ft) tall, about the same height as an 81-storey
        building, and the tallest structure in Paris. Its base is square, measuring
        125 metres (410 ft) on each side. It was the first structure to reach a height
        of 300 metres. Excluding transmitters, the Eiffel Tower is the second tallest
        free-standing structure in France after the Millau Viaduct.\",\"type\":\"text\"}],\"outputs\":[{\"label\":\"Output\",\"content\":\"The
        tower is 324 metres (1,063 ft) tall, about the same height as an 81-storey
        building. It was the first structure to reach a height of 300 metres.\",\"type\":\"text\"}]},\"metrics\":[{\"description\":\"The
        generated sequence is compared against its summary, and the overlap of tokens
        are counted. ROUGE-N refers to overlap of N subsequent tokens, ROUGE-1 refers
        to overlap of single tokens and ROUGE-2 is the overlap of two subsequent tokens.\",\"id\":\"rouge\"}],\"models\":[{\"description\":\"A
        strong summarization model trained on English news articles. Excels at generating
        factual summaries.\",\"id\":\"facebook/bart-large-cnn\"},{\"description\":\"A
        summarization model trained on medical articles.\",\"id\":\"Falconsai/medical_summarization\"}],\"spaces\":[{\"description\":\"An
        application that can summarize long paragraphs.\",\"id\":\"pszemraj/summarize-long-text\"},{\"description\":\"A
        much needed summarization application for terms and conditions.\",\"id\":\"ml6team/distilbart-tos-summarizer-tosdr\"},{\"description\":\"An
        application that summarizes long documents.\",\"id\":\"pszemraj/document-summarization\"},{\"description\":\"An
        application that can detect errors in abstractive summarization.\",\"id\":\"ml6team/post-processing-summarization\"}],\"summary\":\"Summarization
        is the task of producing a shorter version of a document while preserving
        its important information. Some models can extract text from the original
        input, while other models can generate entirely new text.\",\"widgetModels\":[\"facebook/bart-large-cnn\"],\"youtubeId\":\"yHnr5Dk2zCI\",\"id\":\"summarization\",\"label\":\"Summarization\",\"libraries\":[\"transformers\",\"transformers.js\"]},\"table-question-answering\":{\"datasets\":[{\"description\":\"The
        WikiTableQuestions dataset is a large-scale dataset for the task of question
        answering on semi-structured tables.\",\"id\":\"wikitablequestions\"},{\"description\":\"WikiSQL
        is a dataset of 80654 hand-annotated examples of questions and SQL queries
        distributed across 24241 tables from Wikipedia.\",\"id\":\"wikisql\"}],\"demo\":{\"inputs\":[{\"table\":[[\"Rank\",\"Name\",\"No.of
        reigns\",\"Combined days\"],[\"1\",\"lou Thesz\",\"3\",\"3749\"],[\"2\",\"Ric
        Flair\",\"8\",\"3103\"],[\"3\",\"Harley Race\",\"7\",\"1799\"]],\"type\":\"tabular\"},{\"label\":\"Question\",\"content\":\"What
        is the number of reigns for Harley Race?\",\"type\":\"text\"}],\"outputs\":[{\"label\":\"Result\",\"content\":\"7\",\"type\":\"text\"}]},\"metrics\":[{\"description\":\"Checks
        whether the predicted answer(s) is the same as the ground-truth answer(s).\",\"id\":\"Denotation
        Accuracy\"}],\"models\":[{\"description\":\"A table question answering model
        that is capable of neural SQL execution, i.e., employ TAPEX to execute a SQL
        query on a given table.\",\"id\":\"microsoft/tapex-base\"},{\"description\":\"A
        robust table question answering model.\",\"id\":\"google/tapas-base-finetuned-wtq\"}],\"spaces\":[{\"description\":\"An
        application that answers questions based on table CSV files.\",\"id\":\"katanaml/table-query\"}],\"summary\":\"Table
        Question Answering (Table QA) is the answering a question about an information
        on a given table.\",\"widgetModels\":[\"google/tapas-base-finetuned-wtq\"],\"id\":\"table-question-answering\",\"label\":\"Table
        Question Answering\",\"libraries\":[\"transformers\"]},\"tabular-classification\":{\"datasets\":[{\"description\":\"A
        comprehensive curation of datasets covering all benchmarks.\",\"id\":\"inria-soda/tabular-benchmark\"}],\"demo\":{\"inputs\":[{\"table\":[[\"Glucose\",\"Blood
        Pressure \",\"Skin Thickness\",\"Insulin\",\"BMI\"],[\"148\",\"72\",\"35\",\"0\",\"33.6\"],[\"150\",\"50\",\"30\",\"0\",\"35.1\"],[\"141\",\"60\",\"29\",\"1\",\"39.2\"]],\"type\":\"tabular\"}],\"outputs\":[{\"table\":[[\"Diabetes\"],[\"1\"],[\"1\"],[\"0\"]],\"type\":\"tabular\"}]},\"metrics\":[{\"description\":\"\",\"id\":\"accuracy\"},{\"description\":\"\",\"id\":\"recall\"},{\"description\":\"\",\"id\":\"precision\"},{\"description\":\"\",\"id\":\"f1\"}],\"models\":[{\"description\":\"Breast
        cancer prediction model based on decision trees.\",\"id\":\"scikit-learn/cancer-prediction-trees\"}],\"spaces\":[{\"description\":\"An
        application that can predict defective products on a production line.\",\"id\":\"scikit-learn/tabular-playground\"},{\"description\":\"An
        application that compares various tabular classification techniques on different
        datasets.\",\"id\":\"scikit-learn/classification\"}],\"summary\":\"Tabular
        classification is the task of classifying a target category (a group) based
        on set of attributes.\",\"widgetModels\":[\"scikit-learn/tabular-playground\"],\"youtubeId\":\"\",\"id\":\"tabular-classification\",\"label\":\"Tabular
        Classification\",\"libraries\":[\"sklearn\"]},\"tabular-regression\":{\"datasets\":[{\"description\":\"A
        comprehensive curation of datasets covering all benchmarks.\",\"id\":\"inria-soda/tabular-benchmark\"}],\"demo\":{\"inputs\":[{\"table\":[[\"Car
        Name\",\"Horsepower\",\"Weight\"],[\"ford torino\",\"140\",\"3,449\"],[\"amc
        hornet\",\"97\",\"2,774\"],[\"toyota corolla\",\"65\",\"1,773\"]],\"type\":\"tabular\"}],\"outputs\":[{\"table\":[[\"MPG
        (miles per gallon)\"],[\"17\"],[\"18\"],[\"31\"]],\"type\":\"tabular\"}]},\"metrics\":[{\"description\":\"\",\"id\":\"mse\"},{\"description\":\"Coefficient
        of determination (or R-squared) is a measure of how well the model fits the
        data. Higher R-squared is considered a better fit.\",\"id\":\"r-squared\"}],\"models\":[{\"description\":\"Fish
        weight prediction based on length measurements and species.\",\"id\":\"scikit-learn/Fish-Weight\"}],\"spaces\":[{\"description\":\"An
        application that can predict weight of a fish based on set of attributes.\",\"id\":\"scikit-learn/fish-weight-prediction\"}],\"summary\":\"Tabular
        regression is the task of predicting a numerical value given a set of attributes.\",\"widgetModels\":[\"scikit-learn/Fish-Weight\"],\"youtubeId\":\"\",\"id\":\"tabular-regression\",\"label\":\"Tabular
        Regression\",\"libraries\":[\"sklearn\"]},\"text-classification\":{\"datasets\":[{\"description\":\"A
        widely used dataset used to benchmark multiple variants of text classification.\",\"id\":\"nyu-mll/glue\"},{\"description\":\"A
        text classification dataset used to benchmark natural language inference models\",\"id\":\"stanfordnlp/snli\"}],\"demo\":{\"inputs\":[{\"label\":\"Input\",\"content\":\"I
        love Hugging Face!\",\"type\":\"text\"}],\"outputs\":[{\"type\":\"chart\",\"data\":[{\"label\":\"POSITIVE\",\"score\":0.9},{\"label\":\"NEUTRAL\",\"score\":0.1},{\"label\":\"NEGATIVE\",\"score\":0}]}]},\"metrics\":[{\"description\":\"\",\"id\":\"accuracy\"},{\"description\":\"\",\"id\":\"recall\"},{\"description\":\"\",\"id\":\"precision\"},{\"description\":\"The
        F1 metric is the harmonic mean of the precision and recall. It can be calculated
        as: F1 = 2 * (precision * recall) / (precision + recall)\",\"id\":\"f1\"}],\"models\":[{\"description\":\"A
        robust model trained for sentiment analysis.\",\"id\":\"distilbert/distilbert-base-uncased-finetuned-sst-2-english\"},{\"description\":\"A
        sentiment analysis model specialized in financial sentiment.\",\"id\":\"ProsusAI/finbert\"},{\"description\":\"A
        sentiment analysis model specialized in analyzing tweets.\",\"id\":\"cardiffnlp/twitter-roberta-base-sentiment-latest\"},{\"description\":\"A
        model that can classify languages.\",\"id\":\"papluca/xlm-roberta-base-language-detection\"},{\"description\":\"A
        model that can classify text generation attacks.\",\"id\":\"meta-llama/Prompt-Guard-86M\"}],\"spaces\":[{\"description\":\"An
        application that can classify financial sentiment.\",\"id\":\"IoannisTr/Tech_Stocks_Trading_Assistant\"},{\"description\":\"A
        dashboard that contains various text classification tasks.\",\"id\":\"miesnerjacob/Multi-task-NLP\"},{\"description\":\"An
        application that analyzes user reviews in healthcare.\",\"id\":\"spacy/healthsea-demo\"}],\"summary\":\"Text
        Classification is the task of assigning a label or class to a given text.
        Some use cases are sentiment analysis, natural language inference, and assessing
        grammatical correctness.\",\"widgetModels\":[\"distilbert/distilbert-base-uncased-finetuned-sst-2-english\"],\"youtubeId\":\"leNG9fN9FQU\",\"id\":\"text-classification\",\"label\":\"Text
        Classification\",\"libraries\":[\"adapter-transformers\",\"setfit\",\"spacy\",\"transformers\",\"transformers.js\"]},\"text-generation\":{\"datasets\":[{\"description\":\"A
        large multilingual dataset of text crawled from the web.\",\"id\":\"mc4\"},{\"description\":\"Diverse
        open-source data consisting of 22 smaller high-quality datasets. It was used
        to train GPT-Neo.\",\"id\":\"the_pile\"},{\"description\":\"Truly open-source,
        curated and cleaned dialogue dataset.\",\"id\":\"HuggingFaceH4/ultrachat_200k\"},{\"description\":\"An
        instruction dataset with preference ratings on responses.\",\"id\":\"openbmb/UltraFeedback\"},{\"description\":\"A
        large synthetic dataset for alignment of text generation models.\",\"id\":\"argilla/magpie-ultra-v0.1\"}],\"demo\":{\"inputs\":[{\"label\":\"Input\",\"content\":\"Once
        upon a time,\",\"type\":\"text\"}],\"outputs\":[{\"label\":\"Output\",\"content\":\"Once
        upon a time, we knew that our ancestors were on the verge of extinction. The
        great explorers and poets of the Old World, from Alexander the Great to Chaucer,
        are dead and gone. A good many of our ancient explorers and poets have\",\"type\":\"text\"}]},\"metrics\":[{\"description\":\"Cross
        Entropy is a metric that calculates the difference between two probability
        distributions. Each probability distribution is the distribution of predicted
        words\",\"id\":\"Cross Entropy\"},{\"description\":\"The Perplexity metric
        is the exponential of the cross-entropy loss. It evaluates the probabilities
        assigned to the next word by the model. Lower perplexity indicates better
        performance\",\"id\":\"Perplexity\"}],\"models\":[{\"description\":\"A text-generation
        model trained to follow instructions.\",\"id\":\"google/gemma-2-2b-it\"},{\"description\":\"Very
        powerful text generation model trained to follow instructions.\",\"id\":\"meta-llama/Meta-Llama-3.1-8B-Instruct\"},{\"description\":\"Small
        yet powerful text generation model.\",\"id\":\"microsoft/Phi-3-mini-4k-instruct\"},{\"description\":\"A
        very powerful model that can solve mathematical problems.\",\"id\":\"AI-MO/NuminaMath-7B-TIR\"},{\"description\":\"Strong
        text generation model to follow instructions.\",\"id\":\"Qwen/Qwen2.5-7B-Instruct\"},{\"description\":\"Very
        strong open-source large language model.\",\"id\":\"nvidia/Llama-3.1-Nemotron-70B-Instruct\"}],\"spaces\":[{\"description\":\"A
        leaderboard to compare different open-source text generation models based
        on various benchmarks.\",\"id\":\"open-llm-leaderboard/open_llm_leaderboard\"},{\"description\":\"A
        leaderboard for comparing chain-of-thought performance of models.\",\"id\":\"logikon/open_cot_leaderboard\"},{\"description\":\"An
        text generation based application based on a very powerful LLaMA2 model.\",\"id\":\"ysharma/Explore_llamav2_with_TGI\"},{\"description\":\"An
        text generation based application to converse with Zephyr model.\",\"id\":\"HuggingFaceH4/zephyr-chat\"},{\"description\":\"A
        leaderboard that ranks text generation models based on blind votes from people.\",\"id\":\"lmsys/chatbot-arena-leaderboard\"},{\"description\":\"An
        chatbot to converse with a very powerful text generation model.\",\"id\":\"mlabonne/phixtral-chat\"}],\"summary\":\"Generating
        text is the task of generating new text given another text. These models can,
        for example, fill in incomplete text or paraphrase.\",\"widgetModels\":[\"mistralai/Mistral-Nemo-Instruct-2407\"],\"youtubeId\":\"e9gNEAlsOvU\",\"id\":\"text-generation\",\"label\":\"Text
        Generation\",\"libraries\":[\"transformers\",\"transformers.js\"]},\"text-to-image\":{\"datasets\":[{\"description\":\"RedCaps
        is a large-scale dataset of 12M image-text pairs collected from Reddit.\",\"id\":\"red_caps\"},{\"description\":\"Conceptual
        Captions is a dataset consisting of ~3.3M images annotated with captions.\",\"id\":\"conceptual_captions\"}],\"demo\":{\"inputs\":[{\"label\":\"Input\",\"content\":\"A
        city above clouds, pastel colors, Victorian style\",\"type\":\"text\"}],\"outputs\":[{\"filename\":\"image.jpeg\",\"type\":\"img\"}]},\"metrics\":[{\"description\":\"The
        Inception Score (IS) measure assesses diversity and meaningfulness. It uses
        a generated image sample to predict its label. A higher score signifies more
        diverse and meaningful images.\",\"id\":\"IS\"},{\"description\":\"The Fr\xE9chet
        Inception Distance (FID) calculates the distance between distributions between
        synthetic and real samples. A lower FID score indicates better similarity
        between the distributions of real and generated images.\",\"id\":\"FID\"},{\"description\":\"R-precision
        assesses how the generated image aligns with the provided text description.
        It uses the generated images as queries to retrieve relevant text descriptions.
        The top 'r' relevant descriptions are selected and used to calculate R-precision
        as r/R, where 'R' is the number of ground truth descriptions associated with
        the generated images. A higher R-precision value indicates a better model.\",\"id\":\"R-Precision\"}],\"models\":[{\"description\":\"One
        of the most powerful image generation models that can generate realistic outputs.\",\"id\":\"black-forest-labs/FLUX.1-dev\"},{\"description\":\"A
        powerful yet fast image generation model.\",\"id\":\"latent-consistency/lcm-lora-sdxl\"},{\"description\":\"Text-to-image
        model for photorealistic generation.\",\"id\":\"Kwai-Kolors/Kolors\"},{\"description\":\"A
        powerful text-to-image model.\",\"id\":\"stabilityai/stable-diffusion-3-medium-diffusers\"}],\"spaces\":[{\"description\":\"A
        powerful text-to-image application.\",\"id\":\"stabilityai/stable-diffusion-3-medium\"},{\"description\":\"A
        text-to-image application to generate comics.\",\"id\":\"jbilcke-hf/ai-comic-factory\"},{\"description\":\"An
        application to match multiple custom image generation models.\",\"id\":\"multimodalart/flux-lora-lab\"},{\"description\":\"A
        powerful yet very fast image generation application.\",\"id\":\"latent-consistency/lcm-lora-for-sdxl\"},{\"description\":\"A
        gallery to explore various text-to-image models.\",\"id\":\"multimodalart/LoraTheExplorer\"},{\"description\":\"An
        application for `text-to-image`, `image-to-image` and image inpainting.\",\"id\":\"ArtGAN/Stable-Diffusion-ControlNet-WebUI\"},{\"description\":\"An
        application to generate realistic images given photos of a person and a prompt.\",\"id\":\"InstantX/InstantID\"}],\"summary\":\"Text-to-image
        is the task of generating images from input text. These pipelines can also
        be used to modify and edit images based on text prompts.\",\"widgetModels\":[\"black-forest-labs/FLUX.1-dev\"],\"youtubeId\":\"\",\"id\":\"text-to-image\",\"label\":\"Text-to-Image\",\"libraries\":[\"diffusers\"]},\"text-to-speech\":{\"canonicalId\":\"text-to-audio\",\"datasets\":[{\"description\":\"10K
        hours of multi-speaker English dataset.\",\"id\":\"parler-tts/mls_eng_10k\"},{\"description\":\"Multi-speaker
        English dataset.\",\"id\":\"mythicinfinity/libritts_r\"},{\"description\":\"Mulit-lingual
        dataset.\",\"id\":\"facebook/multilingual_librispeech\"}],\"demo\":{\"inputs\":[{\"label\":\"Input\",\"content\":\"I
        love audio models on the Hub!\",\"type\":\"text\"}],\"outputs\":[{\"filename\":\"audio.wav\",\"type\":\"audio\"}]},\"metrics\":[{\"description\":\"The
        Mel Cepstral Distortion (MCD) metric is used to calculate the quality of generated
        speech.\",\"id\":\"mel cepstral distortion\"}],\"models\":[{\"description\":\"A
        prompt based, powerful TTS model.\",\"id\":\"parler-tts/parler-tts-large-v1\"},{\"description\":\"A
        powerful TTS model that supports English and Chinese.\",\"id\":\"SWivid/F5-TTS\"},{\"description\":\"A
        massively multi-lingual TTS model.\",\"id\":\"coqui/XTTS-v2\"},{\"description\":\"A
        powerful TTS model.\",\"id\":\"amphion/MaskGCT\"},{\"description\":\"A Llama
        based TTS model.\",\"id\":\"OuteAI/OuteTTS-0.1-350M\"}],\"spaces\":[{\"description\":\"An
        application for generate highly realistic, multilingual speech.\",\"id\":\"suno/bark\"},{\"description\":\"An
        application on XTTS, a voice generation model that lets you clone voices into
        different languages.\",\"id\":\"coqui/xtts\"},{\"description\":\"An application
        that generates speech in different styles in English and Chinese.\",\"id\":\"mrfakename/E2-F5-TTS\"},{\"description\":\"An
        application that synthesizes emotional speech for diverse speaker prompts.\",\"id\":\"parler-tts/parler-tts-expresso\"}],\"summary\":\"Text-to-Speech
        (TTS) is the task of generating natural sounding speech given text input.
        TTS models can be extended to have a single model that generates speech for
        multiple speakers and multiple languages.\",\"widgetModels\":[\"suno/bark\"],\"youtubeId\":\"NW62DpzJ274\",\"id\":\"text-to-speech\",\"label\":\"Text-to-Speech\",\"libraries\":[\"espnet\",\"tensorflowtts\",\"transformers\",\"transformers.js\"]},\"text-to-video\":{\"datasets\":[{\"description\":\"Microsoft
        Research Video to Text is a large-scale dataset for open domain video captioning\",\"id\":\"iejMac/CLIP-MSR-VTT\"},{\"description\":\"UCF101
        Human Actions dataset consists of 13,320 video clips from YouTube, with 101
        classes.\",\"id\":\"quchenyuan/UCF101-ZIP\"},{\"description\":\"A high-quality
        dataset for human action recognition in YouTube videos.\",\"id\":\"nateraw/kinetics\"},{\"description\":\"A
        dataset of video clips of humans performing pre-defined basic actions with
        everyday objects.\",\"id\":\"HuggingFaceM4/something_something_v2\"},{\"description\":\"This
        dataset consists of text-video pairs and contains noisy samples with irrelevant
        video descriptions\",\"id\":\"HuggingFaceM4/webvid\"},{\"description\":\"A
        dataset of short Flickr videos for the temporal localization of events with
        descriptions.\",\"id\":\"iejMac/CLIP-DiDeMo\"}],\"demo\":{\"inputs\":[{\"label\":\"Input\",\"content\":\"Darth
        Vader is surfing on the waves.\",\"type\":\"text\"}],\"outputs\":[{\"filename\":\"text-to-video-output.gif\",\"type\":\"img\"}]},\"metrics\":[{\"description\":\"Inception
        Score uses an image classification model that predicts class labels and evaluates
        how distinct and diverse the images are. A higher score indicates better video
        generation.\",\"id\":\"is\"},{\"description\":\"Frechet Inception Distance
        uses an image classification model to obtain image embeddings. The metric
        compares mean and standard deviation of the embeddings of real and generated
        images. A smaller score indicates better video generation.\",\"id\":\"fid\"},{\"description\":\"Frechet
        Video Distance uses a model that captures coherence for changes in frames
        and the quality of each frame. A smaller score indicates better video generation.\",\"id\":\"fvd\"},{\"description\":\"CLIPSIM
        measures similarity between video frames and text using an image-text similarity
        model. A higher score indicates better video generation.\",\"id\":\"clipsim\"}],\"models\":[{\"description\":\"A
        strong model for consistent video generation.\",\"id\":\"rain1011/pyramid-flow-sd3\"},{\"description\":\"A
        robust model for text-to-video generation.\",\"id\":\"VideoCrafter/VideoCrafter2\"},{\"description\":\"A
        cutting-edge text-to-video generation model.\",\"id\":\"TIGER-Lab/T2V-Turbo-V2\"}],\"spaces\":[{\"description\":\"An
        application that generates video from text.\",\"id\":\"VideoCrafter/VideoCrafter\"},{\"description\":\"Consistent
        video generation application.\",\"id\":\"TIGER-Lab/T2V-Turbo-V2\"},{\"description\":\"A
        cutting edge video generation application.\",\"id\":\"Pyramid-Flow/pyramid-flow\"}],\"summary\":\"Text-to-video
        models can be used in any application that requires generating consistent
        sequence of images from text. \",\"widgetModels\":[],\"id\":\"text-to-video\",\"label\":\"Text-to-Video\",\"libraries\":[\"diffusers\"]},\"token-classification\":{\"datasets\":[{\"description\":\"A
        widely used dataset useful to benchmark named entity recognition models.\",\"id\":\"eriktks/conll2003\"},{\"description\":\"A
        multilingual dataset of Wikipedia articles annotated for named entity recognition
        in over 150 different languages.\",\"id\":\"unimelb-nlp/wikiann\"}],\"demo\":{\"inputs\":[{\"label\":\"Input\",\"content\":\"My
        name is Omar and I live in Z\xFCrich.\",\"type\":\"text\"}],\"outputs\":[{\"text\":\"My
        name is Omar and I live in Z\xFCrich.\",\"tokens\":[{\"type\":\"PERSON\",\"start\":11,\"end\":15},{\"type\":\"GPE\",\"start\":30,\"end\":36}],\"type\":\"text-with-tokens\"}]},\"metrics\":[{\"description\":\"\",\"id\":\"accuracy\"},{\"description\":\"\",\"id\":\"recall\"},{\"description\":\"\",\"id\":\"precision\"},{\"description\":\"\",\"id\":\"f1\"}],\"models\":[{\"description\":\"A
        robust performance model to identify people, locations, organizations and
        names of miscellaneous entities.\",\"id\":\"dslim/bert-base-NER\"},{\"description\":\"A
        strong model to identify people, locations, organizations and names in multiple
        languages.\",\"id\":\"FacebookAI/xlm-roberta-large-finetuned-conll03-english\"},{\"description\":\"A
        token classification model specialized on medical entity recognition.\",\"id\":\"blaze999/Medical-NER\"},{\"description\":\"Flair
        models are typically the state of the art in named entity recognition tasks.\",\"id\":\"flair/ner-english\"}],\"spaces\":[{\"description\":\"An
        application that can recognizes entities, extracts noun chunks and recognizes
        various linguistic features of each token.\",\"id\":\"spacy/gradio_pipeline_visualizer\"}],\"summary\":\"Token
        classification is a natural language understanding task in which a label is
        assigned to some tokens in a text. Some popular token classification subtasks
        are Named Entity Recognition (NER) and Part-of-Speech (PoS) tagging. NER models
        could be trained to identify specific entities in a text, such as dates, individuals
        and places; and PoS tagging would identify, for example, which words in a
        text are verbs, nouns, and punctuation marks.\",\"widgetModels\":[\"FacebookAI/xlm-roberta-large-finetuned-conll03-english\"],\"youtubeId\":\"wVHdVlPScxA\",\"id\":\"token-classification\",\"label\":\"Token
        Classification\",\"libraries\":[\"adapter-transformers\",\"flair\",\"spacy\",\"span-marker\",\"stanza\",\"transformers\",\"transformers.js\"]},\"translation\":{\"canonicalId\":\"text2text-generation\",\"datasets\":[{\"description\":\"A
        dataset of copyright-free books translated into 16 different languages.\",\"id\":\"Helsinki-NLP/opus_books\"},{\"description\":\"An
        example of translation between programming languages. This dataset consists
        of functions in Java and C#.\",\"id\":\"google/code_x_glue_cc_code_to_code_trans\"}],\"demo\":{\"inputs\":[{\"label\":\"Input\",\"content\":\"My
        name is Omar and I live in Z\xFCrich.\",\"type\":\"text\"}],\"outputs\":[{\"label\":\"Output\",\"content\":\"Mein
        Name ist Omar und ich wohne in Z\xFCrich.\",\"type\":\"text\"}]},\"metrics\":[{\"description\":\"BLEU
        score is calculated by counting the number of shared single or subsequent
        tokens between the generated sequence and the reference. Subsequent n tokens
        are called \u201Cn-grams\u201D. Unigram refers to a single token while bi-gram
        refers to token pairs and n-grams refer to n subsequent tokens. The score
        ranges from 0 to 1, where 1 means the translation perfectly matched and 0
        did not match at all\",\"id\":\"bleu\"},{\"description\":\"\",\"id\":\"sacrebleu\"}],\"models\":[{\"description\":\"Very
        powerful model that can translate many languages between each other, especially
        low-resource languages.\",\"id\":\"facebook/nllb-200-1.3B\"},{\"description\":\"A
        general-purpose Transformer that can be used to translate from English to
        German, French, or Romanian.\",\"id\":\"google-t5/t5-base\"}],\"spaces\":[{\"description\":\"An
        application that can translate between 100 languages.\",\"id\":\"Iker/Translate-100-languages\"},{\"description\":\"An
        application that can translate between many languages.\",\"id\":\"Geonmo/nllb-translation-demo\"}],\"summary\":\"Translation
        is the task of converting text from one language to another.\",\"widgetModels\":[\"facebook/mbart-large-50-many-to-many-mmt\"],\"youtubeId\":\"1JvfrvZgi6c\",\"id\":\"translation\",\"label\":\"Translation\",\"libraries\":[\"transformers\",\"transformers.js\"]},\"unconditional-image-generation\":{\"datasets\":[{\"description\":\"The
        CIFAR-100 dataset consists of 60000 32x32 colour images in 100 classes, with
        600 images per class.\",\"id\":\"cifar100\"},{\"description\":\"Multiple images
        of celebrities, used for facial expression translation.\",\"id\":\"CelebA\"}],\"demo\":{\"inputs\":[{\"label\":\"Seed\",\"content\":\"42\",\"type\":\"text\"},{\"label\":\"Number
        of images to generate:\",\"content\":\"4\",\"type\":\"text\"}],\"outputs\":[{\"filename\":\"unconditional-image-generation-output.jpeg\",\"type\":\"img\"}]},\"metrics\":[{\"description\":\"The
        inception score (IS) evaluates the quality of generated images. It measures
        the diversity of the generated images (the model predictions are evenly distributed
        across all possible labels) and their 'distinction' or 'sharpness' (the model
        confidently predicts a single label for each image).\",\"id\":\"Inception
        score (IS)\"},{\"description\":\"The Fr\xE9chet Inception Distance (FID) evaluates
        the quality of images created by a generative model by calculating the distance
        between feature vectors for real and generated images.\",\"id\":\"Fre\u0107het
        Inception Distance (FID)\"}],\"models\":[{\"description\":\"High-quality image
        generation model trained on the CIFAR-10 dataset. It synthesizes images of
        the ten classes presented in the dataset using diffusion probabilistic models,
        a class of latent variable models inspired by considerations from nonequilibrium
        thermodynamics.\",\"id\":\"google/ddpm-cifar10-32\"},{\"description\":\"High-quality
        image generation model trained on the 256x256 CelebA-HQ dataset. It synthesizes
        images of faces using diffusion probabilistic models, a class of latent variable
        models inspired by considerations from nonequilibrium thermodynamics.\",\"id\":\"google/ddpm-celebahq-256\"}],\"spaces\":[{\"description\":\"An
        application that can generate realistic faces.\",\"id\":\"CompVis/celeba-latent-diffusion\"}],\"summary\":\"Unconditional
        image generation is the task of generating images with no condition in any
        context (like a prompt text or another image). Once trained, the model will
        create images that resemble its training data distribution.\",\"widgetModels\":[\"\"],\"youtubeId\":\"\",\"id\":\"unconditional-image-generation\",\"label\":\"Unconditional
        Image Generation\",\"libraries\":[\"diffusers\"]},\"video-text-to-text\":{\"datasets\":[{\"description\":\"Multiple-choice
        questions and answers about videos.\",\"id\":\"lmms-lab/Video-MME\"},{\"description\":\"A
        dataset of instructions and question-answer pairs about videos.\",\"id\":\"lmms-lab/VideoChatGPT\"},{\"description\":\"Large
        video understanding dataset.\",\"id\":\"HuggingFaceFV/finevideo\"}],\"demo\":{\"inputs\":[{\"filename\":\"video-text-to-text-input.gif\",\"type\":\"img\"},{\"label\":\"Text
        Prompt\",\"content\":\"What is happening in this video?\",\"type\":\"text\"}],\"outputs\":[{\"label\":\"Answer\",\"content\":\"The
        video shows a series of images showing a fountain with water jets and a variety
        of colorful flowers and butterflies in the background.\",\"type\":\"text\"}]},\"metrics\":[],\"models\":[{\"description\":\"A
        robust video-text-to-text model that can take in image and video inputs.\",\"id\":\"llava-hf/llava-onevision-qwen2-72b-ov-hf\"},{\"description\":\"Large
        and powerful video-text-to-text model that can take in image and video inputs.\",\"id\":\"llava-hf/LLaVA-NeXT-Video-34B-hf\"}],\"spaces\":[{\"description\":\"An
        application to chat with a video-text-to-text model.\",\"id\":\"llava-hf/video-llava\"},{\"description\":\"A
        leaderboard for various video-text-to-text models.\",\"id\":\"opencompass/openvlm_video_leaderboard\"}],\"summary\":\"Video-text-to-text
        models take in a video and a text prompt and output text. These models are
        also called video-language models.\",\"widgetModels\":[\"\"],\"youtubeId\":\"\",\"id\":\"video-text-to-text\",\"label\":\"Video-Text-to-Text\",\"libraries\":[\"transformers\"]},\"visual-question-answering\":{\"datasets\":[{\"description\":\"A
        widely used dataset containing questions (with answers) about images.\",\"id\":\"Graphcore/vqa\"},{\"description\":\"A
        dataset to benchmark visual reasoning based on text in images.\",\"id\":\"facebook/textvqa\"}],\"demo\":{\"inputs\":[{\"filename\":\"elephant.jpeg\",\"type\":\"img\"},{\"label\":\"Question\",\"content\":\"What
        is in this image?\",\"type\":\"text\"}],\"outputs\":[{\"type\":\"chart\",\"data\":[{\"label\":\"elephant\",\"score\":0.97},{\"label\":\"elephants\",\"score\":0.06},{\"label\":\"animal\",\"score\":0.003}]}]},\"isPlaceholder\":false,\"metrics\":[{\"description\":\"\",\"id\":\"accuracy\"},{\"description\":\"Measures
        how much a predicted answer differs from the ground truth based on the difference
        in their semantic meaning.\",\"id\":\"wu-palmer similarity\"}],\"models\":[{\"description\":\"A
        visual question answering model trained to convert charts and plots to text.\",\"id\":\"google/deplot\"},{\"description\":\"A
        visual question answering model trained for mathematical reasoning and chart
        derendering from images.\",\"id\":\"google/matcha-base\"},{\"description\":\"A
        strong visual question answering that answers questions from book covers.\",\"id\":\"google/pix2struct-ocrvqa-large\"}],\"spaces\":[{\"description\":\"An
        application that compares visual question answering models across different
        tasks.\",\"id\":\"merve/pix2struct\"},{\"description\":\"An application that
        can answer questions based on images.\",\"id\":\"nielsr/vilt-vqa\"},{\"description\":\"An
        application that can caption images and answer questions about a given image.
        \",\"id\":\"Salesforce/BLIP\"},{\"description\":\"An application that can
        caption images and answer questions about a given image. \",\"id\":\"vumichien/Img2Prompt\"}],\"summary\":\"Visual
        Question Answering is the task of answering open-ended questions based on
        an image. They output natural language responses to natural language questions.\",\"widgetModels\":[\"dandelin/vilt-b32-finetuned-vqa\"],\"youtubeId\":\"\",\"id\":\"visual-question-answering\",\"label\":\"Visual
        Question Answering\",\"libraries\":[\"transformers\",\"transformers.js\"]},\"zero-shot-classification\":{\"datasets\":[{\"description\":\"A
        widely used dataset used to benchmark multiple variants of text classification.\",\"id\":\"nyu-mll/glue\"},{\"description\":\"The
        Multi-Genre Natural Language Inference (MultiNLI) corpus is a crowd-sourced
        collection of 433k sentence pairs annotated with textual entailment information.\",\"id\":\"nyu-mll/multi_nli\"},{\"description\":\"FEVER
        is a publicly available dataset for fact extraction and verification against
        textual sources.\",\"id\":\"fever/fever\"}],\"demo\":{\"inputs\":[{\"label\":\"Text
        Input\",\"content\":\"Dune is the best movie ever.\",\"type\":\"text\"},{\"label\":\"Candidate
        Labels\",\"content\":\"CINEMA, ART, MUSIC\",\"type\":\"text\"}],\"outputs\":[{\"type\":\"chart\",\"data\":[{\"label\":\"CINEMA\",\"score\":0.9},{\"label\":\"ART\",\"score\":0.1},{\"label\":\"MUSIC\",\"score\":0}]}]},\"metrics\":[],\"models\":[{\"description\":\"Powerful
        zero-shot text classification model.\",\"id\":\"facebook/bart-large-mnli\"},{\"description\":\"Powerful
        zero-shot multilingual text classification model that can accomplish multiple
        tasks.\",\"id\":\"MoritzLaurer/mDeBERTa-v3-base-xnli-multilingual-nli-2mil7\"}],\"spaces\":[],\"summary\":\"Zero-shot
        text classification is a task in natural language processing where a model
        is trained on a set of labeled examples but is then able to classify new examples
        from previously unseen classes.\",\"widgetModels\":[\"facebook/bart-large-mnli\"],\"id\":\"zero-shot-classification\",\"label\":\"Zero-Shot
        Classification\",\"libraries\":[\"transformers\",\"transformers.js\"]},\"zero-shot-image-classification\":{\"datasets\":[{\"description\":\"\",\"id\":\"\"}],\"demo\":{\"inputs\":[{\"filename\":\"image-classification-input.jpeg\",\"type\":\"img\"},{\"label\":\"Classes\",\"content\":\"cat,
        dog, bird\",\"type\":\"text\"}],\"outputs\":[{\"type\":\"chart\",\"data\":[{\"label\":\"Cat\",\"score\":0.664},{\"label\":\"Dog\",\"score\":0.329},{\"label\":\"Bird\",\"score\":0.008}]}]},\"metrics\":[{\"description\":\"Computes
        the number of times the correct label appears in top K labels predicted\",\"id\":\"top-K
        accuracy\"}],\"models\":[{\"description\":\"Robust image classification model
        trained on publicly available image-caption data.\",\"id\":\"openai/clip-vit-base-patch16\"},{\"description\":\"Strong
        zero-shot image classification model.\",\"id\":\"google/siglip-so400m-patch14-224\"},{\"description\":\"Small
        yet powerful zero-shot image classification model that can run on edge devices.\",\"id\":\"apple/MobileCLIP-S1-OpenCLIP\"},{\"description\":\"Strong
        image classification model for biomedical domain.\",\"id\":\"microsoft/BiomedCLIP-PubMedBERT_256-vit_base_patch16_224\"}],\"spaces\":[{\"description\":\"An
        application that leverages zero-shot image classification to find best captions
        to generate an image. \",\"id\":\"pharma/CLIP-Interrogator\"},{\"description\":\"An
        application to compare different zero-shot image classification models. \",\"id\":\"merve/compare_clip_siglip\"}],\"summary\":\"Zero-shot
        image classification is the task of classifying previously unseen classes
        during training of a model.\",\"widgetModels\":[\"google/siglip-so400m-patch14-224\"],\"youtubeId\":\"\",\"id\":\"zero-shot-image-classification\",\"label\":\"Zero-Shot
        Image Classification\",\"libraries\":[\"transformers\",\"transformers.js\"]},\"zero-shot-object-detection\":{\"datasets\":[],\"demo\":{\"inputs\":[{\"filename\":\"zero-shot-object-detection-input.jpg\",\"type\":\"img\"},{\"label\":\"Classes\",\"content\":\"cat,
        dog, bird\",\"type\":\"text\"}],\"outputs\":[{\"filename\":\"zero-shot-object-detection-output.jpg\",\"type\":\"img\"}]},\"metrics\":[{\"description\":\"The
        Average Precision (AP) metric is the Area Under the PR Curve (AUC-PR). It
        is calculated for each class separately\",\"id\":\"Average Precision\"},{\"description\":\"The
        Mean Average Precision (mAP) metric is the overall average of the AP values\",\"id\":\"Mean
        Average Precision\"},{\"description\":\"The AP\u03B1 metric is the Average
        Precision at the IoU threshold of a \u03B1 value, for example, AP50 and AP75\",\"id\":\"AP\u03B1\"}],\"models\":[{\"description\":\"Solid
        zero-shot object detection model.\",\"id\":\"IDEA-Research/grounding-dino-base\"},{\"description\":\"Cutting-edge
        zero-shot object detection model.\",\"id\":\"google/owlv2-base-patch16-ensemble\"}],\"spaces\":[{\"description\":\"A
        demo to try the state-of-the-art zero-shot object detection model, OWLv2.\",\"id\":\"merve/owlv2\"},{\"description\":\"A
        demo that combines a zero-shot object detection and mask generation model
        for zero-shot segmentation.\",\"id\":\"merve/OWLSAM\"}],\"summary\":\"Zero-shot
        object detection is a computer vision task to detect objects and their classes
        in images, without any prior training or knowledge of the classes. Zero-shot
        object detection models receive an image as input, as well as a list of candidate
        classes, and output the bounding boxes and labels where the objects have been
        detected.\",\"widgetModels\":[],\"youtubeId\":\"\",\"id\":\"zero-shot-object-detection\",\"label\":\"Zero-Shot
        Object Detection\",\"libraries\":[\"transformers\",\"transformers.js\"]},\"text-to-3d\":{\"datasets\":[{\"description\":\"A
        large dataset of over 10 million 3D objects.\",\"id\":\"allenai/objaverse-xl\"},{\"description\":\"Descriptive
        captions for 3D objects in Objaverse.\",\"id\":\"tiange/Cap3D\"}],\"demo\":{\"inputs\":[{\"label\":\"Prompt\",\"content\":\"a
        cat statue\",\"type\":\"text\"}],\"outputs\":[{\"label\":\"Result\",\"content\":\"text-to-3d-3d-output-filename.glb\",\"type\":\"text\"}]},\"metrics\":[],\"models\":[{\"description\":\"Text-to-3D
        mesh model by OpenAI\",\"id\":\"openai/shap-e\"},{\"description\":\"Generative
        3D gaussian splatting model.\",\"id\":\"ashawkey/LGM\"}],\"spaces\":[{\"description\":\"Text-to-3D
        demo with mesh outputs.\",\"id\":\"hysts/Shap-E\"},{\"description\":\"Text/image-to-3D
        demo with splat outputs.\",\"id\":\"ashawkey/LGM\"}],\"summary\":\"Text-to-3D
        models take in text input and produce 3D output.\",\"widgetModels\":[],\"youtubeId\":\"\",\"id\":\"text-to-3d\",\"label\":\"Text-to-3D\",\"libraries\":[\"diffusers\"]},\"image-to-3d\":{\"datasets\":[{\"description\":\"A
        large dataset of over 10 million 3D objects.\",\"id\":\"allenai/objaverse-xl\"},{\"description\":\"A
        dataset of isolated object images for evaluating image-to-3D models.\",\"id\":\"dylanebert/iso3d\"}],\"demo\":{\"inputs\":[{\"filename\":\"image-to-3d-image-input.png\",\"type\":\"img\"}],\"outputs\":[{\"label\":\"Result\",\"content\":\"image-to-3d-3d-output-filename.glb\",\"type\":\"text\"}]},\"metrics\":[],\"models\":[{\"description\":\"Fast
        image-to-3D mesh model by Tencent.\",\"id\":\"TencentARC/InstantMesh\"},{\"description\":\"Fast
        image-to-3D mesh model by StabilityAI\",\"id\":\"stabilityai/TripoSR\"},{\"description\":\"A
        scaled up image-to-3D mesh model derived from TripoSR.\",\"id\":\"hwjiang/Real3D\"},{\"description\":\"Generative
        3D gaussian splatting model.\",\"id\":\"ashawkey/LGM\"}],\"spaces\":[{\"description\":\"Leaderboard
        to evaluate image-to-3D models.\",\"id\":\"dylanebert/3d-arena\"},{\"description\":\"Image-to-3D
        demo with mesh outputs.\",\"id\":\"TencentARC/InstantMesh\"},{\"description\":\"Image-to-3D
        demo with mesh outputs.\",\"id\":\"stabilityai/TripoSR\"},{\"description\":\"Image-to-3D
        demo with mesh outputs.\",\"id\":\"hwjiang/Real3D\"},{\"description\":\"Image-to-3D
        demo with splat outputs.\",\"id\":\"dylanebert/LGM-mini\"}],\"summary\":\"Image-to-3D
        models take in image input and produce 3D output.\",\"widgetModels\":[],\"youtubeId\":\"\",\"id\":\"image-to-3d\",\"label\":\"Image-to-3D\",\"libraries\":[\"diffusers\"]}}"
    headers:
      Access-Control-Allow-Origin:
      - https://huggingface.co
      Access-Control-Expose-Headers:
      - X-Repo-Commit,X-Request-Id,X-Error-Code,X-Error-Message,X-Total-Count,ETag,Link,Accept-Ranges,Content-Range,X-Xet-Access-Token,X-Xet-Token-Expiration,X-Xet-Refresh-Route,X-Xet-Cas-Url,X-Xet-Hash
      Connection:
      - keep-alive
      Content-Length:
      - '74829'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Wed, 08 Jan 2025 20:28:54 GMT
      ETag:
      - W/"1244d-rY02FKAQRZwcoD2xI/AqH93OPBg"
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Vary:
      - Origin
      Via:
      - 1.1 c261294b728c8520b22fc1dd217247ea.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - I8tDpnx_EaxBMWqFHWsIGrxyaHNgLPC6vDnRPInVGQ9m6DQQRftIWA==
      X-Amz-Cf-Pop:
      - BOG50-C1
      X-Cache:
      - Miss from cloudfront
      X-Powered-By:
      - huggingface-moon
      X-Request-Id:
      - Root=1-677ee006-73badc995591b31557a7df40;ea4124f7-e8c5-4971-b819-f2748d11b7ee
      cross-origin-opener-policy:
      - same-origin
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      authorization:
      - DUMMY
      user-agent:
      - unknown/None; hf_hub/0.26.5; python/3.12.8
    method: POST
    uri: https://api-inference.huggingface.co/models/suno/bark
  response:
    body:
      string: !!binary |
        ZkxhQwAAACIJAAkAAAAAABsWBdwBcAAAAAAAAAAAAAAAAAAAAAAAAAAABAAALg0AAABMYXZmNTgu
        NzYuMTAwAQAAABUAAABlbmNvZGVyPUxhdmY1OC43Ni4xMDCBACAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/+EcMAOZOABPYAAaCAAT4AAWLAA7Y//Os//Bk//RM5iJ3
        zH4s+6kQbw+ZoYA+AyjE8pvrAW0wAyxBHbBg/AAyEWWwCS6eRzVQU9AMBAHZF6TvMmDpHXR319sr
        XLTglD6fqxd2FSUbCYCvdATQasIL3AWE8YYdSD77bGHX280GAqYD3tCWirZUtcy/+wq3kRK2AVyy
        qYODszpA2i+ytiaTk4RE+AD9Qqotlfho2pj9VY9IKYgrB+NaovHgWKgkdkcdXzpEgEPIDx+R4kGu
        W5kaN2NDueSGBZGTIs8YNR6rDfmkSNc/GrZLhQhUYCul8CzRJDUgGbw1pY2ldReCiS1UpuRC+RZl
        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
    headers:
      Access-Control-Allow-Credentials:
      - 'true'
      Connection:
      - keep-alive
      Content-Length:
      - '80130'
      Content-Type:
      - audio/flac
      Date:
      - Wed, 08 Jan 2025 20:28:54 GMT
      Vary:
      - Origin, Access-Control-Request-Method, Access-Control-Request-Headers
      x-compute-time:
      - '5.332'
      x-compute-type:
      - cache
      x-request-id:
      - CM2sajUOJb-vLmlqs1TC7
      x-sha:
      - 70a8a7d34168586dc5d028fa9666aceade177992
    status:
      code: 200
      message: OK
version: 1
