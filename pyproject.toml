[project]
name = "scope3ai"
version = "0.1.1-alpha.3"
description = "Track the environmental impact of your use of AI"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "httpx>=0.28.1",
    "litellm>=1.53.3",
    "pillow>=11.0.0",
    "pydantic>=2.10.3",
    "wrapt>=1.17.0",
]

[project.optional-dependencies]
openai = [
    "openai>=1.57.1",
]
litellm = [
    "litellm>=1.53.3",
    "rapidfuzz>=3.10.1",
]
mistralai = [
    "mistralai>=0.4.2",
]
anthropic = [
    "anthropic>=0.40.0",
]
cohere = [
    "cohere>=5.13.3",
]
huggingface-hub = [
    "aiohttp>=3.11.10",
    "huggingface-hub>=0.26.5",
    "minijinja>=2.5.0",
    "tiktoken>=0.8.0",
]
google-generativeai = [
    "google-generativeai>=0.8.3",
]

[dependency-groups]
tests = [
    "pytest-vcr>=1.0.2",
    "pytest>=8.3.4",
    "pytest-docker>=3.1.1",
    "pytest-asyncio>=0.25.0",
]
openapi = [
    "datamodel-code-generator>=0.26.4",
]

[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "chore(release): {version}"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"
version_variables = [
    "pyproject.toml:version",
    "scope3ai/__init__.py:__version__"
]

[tool.semantic_release.branches.main]
match = "(main)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = ".changelog/templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
